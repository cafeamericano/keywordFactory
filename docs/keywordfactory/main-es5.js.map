{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/all-keywords/all-keywords.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/keyword-card/keyword-card.component.ts","webpack:///src/app/keyword-details/keyword-details.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AllKeywordsComponent","ngOnInit","rootUrl","fetch","response","json","data","allKeywordsArray","keywordCount","length","serverResponded","selector","template","styles","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","routingComponents","AppComponent","title","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","KeywordCardComponent","value","KeywordDetailsComponent","route","location","definePossibleKeywordTypes","definePossibleDisplayStatuses","keywordId","processRead","possibleDisplayStatuses","label","possibleKeywordTypes","applyPreselectedKeywordType","keywordInformation","type","document","getElementById","setAttribute","applyPreselectedDisplayStatus","console","log","querySelector","showInGallery","showOnPortfolio","params","subscribe","queryParams","qParams","url","method","headers","body","JSON","stringify","name","back","_id","processCancel","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-all-keywords',\n    template: `\n\n        <div *ngIf=\"serverResponded; else loadingScreen\" style=\"overflow: scroll; height: 100%; padding-bottom: 5rem\">\n            <section class='container animated fadeInLeft'>\n\n                <br/>\n                <div style='text-align: right'><h6>Showing {{keywordCount}} keywords.</h6></div>\n                <br/>\n\n                <div class='keyword-section'>\n                    <h6>Languages</h6>\n                    <hr/>\n                    <div class='row'>\n                        <div *ngFor='let item of allKeywordsArray'>\n                            <div *ngIf=\"item.type == 'language'\">\n                                <section class='col s6 m6 l4 xl3'>\n                                    <!-- <div *ngIf=\"item.isActive == true; else inactiveKeywordCard\"> -->\n                                        <app-keyword-card [keywordObj]=\"item\"></app-keyword-card>\n                                    <!-- </div> -->\n                                </section>\n                            </div>\n                            <!-- <ng-template #inactiveKeywordCard>\n                                <div style=\"opacity: 0.5\"><app-keyword-card [keywordObj]=\"item\"></app-keyword-card></div>\n                            </ng-template> -->\n                        </div>\n                    </div>\n                </div>\n\n                <div class='keyword-section'>\n                    <h6>Libraries</h6>\n                    <hr/>\n                    <div class='row'>\n                        <div *ngFor='let item of allKeywordsArray'>\n                            <div *ngIf=\"item.type == 'library'\">\n                                <section class='col s6 m6 l4 xl3'>\n                                    <!-- <div *ngIf=\"item.isActive == true; else inactiveKeywordCard\"> -->\n                                        <app-keyword-card [keywordObj]=\"item\"></app-keyword-card>\n                                    <!-- </div> -->\n                                </section>\n                            </div>\n                            <!-- <ng-template #inactiveKeywordCard>\n                                <div style=\"opacity: 0.5\"><app-keyword-card [keywordObj]=\"item\"></app-keyword-card></div>\n                            </ng-template> -->\n                        </div>\n                    </div>\n                </div>\n\n                <div class='keyword-section'>\n                    <h6>Front End Frameworks</h6>\n                    <hr/>\n                    <div class='row'>\n                        <div *ngFor='let item of allKeywordsArray'>\n                            <div *ngIf=\"item.type == 'front-end-framework'\">\n                                <section class='col s6 m6 l4 xl3'>\n                                    <!-- <div *ngIf=\"item.isActive == true; else inactiveKeywordCard\"> -->\n                                        <app-keyword-card [keywordObj]=\"item\"></app-keyword-card>\n                                    <!-- </div> -->\n                                </section>\n                            </div>\n                            <!-- <ng-template #inactiveKeywordCard>\n                                <div style=\"opacity: 0.5\"><app-keyword-card [keywordObj]=\"item\"></app-keyword-card></div>\n                            </ng-template> -->\n                        </div>\n                    </div>\n                </div>\n                \n                <div class='keyword-section'>\n                    <h6>Back End Frameworks</h6>\n                    <hr/>\n                    <div class='row'>\n                        <div *ngFor='let item of allKeywordsArray'>\n                            <div *ngIf=\"item.type == 'back-end-framework'\">\n                                <section class='col s6 m6 l4 xl3'>\n                                    <!-- <div *ngIf=\"item.isActive == true; else inactiveKeywordCard\"> -->\n                                        <app-keyword-card [keywordObj]=\"item\"></app-keyword-card>\n                                    <!-- </div> -->\n                                </section>\n                            </div>\n                            <!-- <ng-template #inactiveKeywordCard>\n                                <div style=\"opacity: 0.5\"><app-keyword-card [keywordObj]=\"item\"></app-keyword-card></div>\n                            </ng-template> -->\n                        </div>\n                    </div>\n                </div>\n\n                <div class='keyword-section'>\n                    <h6>Databases</h6>\n                    <hr/>\n                    <div class='row'>\n                        <div *ngFor='let item of allKeywordsArray'>\n                            <div *ngIf=\"item.type == 'database'\">\n                                <section class='col s6 m6 l4 xl3'>\n                                    <!-- <div *ngIf=\"item.isActive == true; else inactiveKeywordCard\"> -->\n                                        <app-keyword-card [keywordObj]=\"item\"></app-keyword-card>\n                                    <!-- </div> -->\n                                </section>\n                            </div>\n                            <!-- <ng-template #inactiveKeywordCard>\n                                <div style=\"opacity: 0.5\"><app-keyword-card [keywordObj]=\"item\"></app-keyword-card></div>\n                            </ng-template> -->\n                        </div>\n                    </div>\n                </div>\n\n                <div class='keyword-section'>\n                    <h6>ORMs</h6>\n                    <hr/>\n                    <div class='row'>\n                        <div *ngFor='let item of allKeywordsArray'>\n                            <div *ngIf=\"item.type == 'orm'\">\n                                <section class='col s6 m6 l4 xl3'>\n                                    <!-- <div *ngIf=\"item.isActive == true; else inactiveKeywordCard\"> -->\n                                        <app-keyword-card [keywordObj]=\"item\"></app-keyword-card>\n                                    <!-- </div> -->\n                                </section>\n                            </div>\n                            <!-- <ng-template #inactiveKeywordCard>\n                                <div style=\"opacity: 0.5\"><app-keyword-card [keywordObj]=\"item\"></app-keyword-card></div>\n                            </ng-template> -->\n                        </div>\n                    </div>\n                </div>\n\n                <div class='keyword-section'>\n                    <h6>Deployment Technologies</h6>\n                    <hr/>\n                    <div class='row'>\n                        <div *ngFor='let item of allKeywordsArray'>\n                            <div *ngIf=\"item.type == 'deployment'\">\n                                <section class='col s6 m6 l4 xl3'>\n                                    <!-- <div *ngIf=\"item.isActive == true; else inactiveKeywordCard\"> -->\n                                        <app-keyword-card [keywordObj]=\"item\"></app-keyword-card>\n                                    <!-- </div> -->\n                                </section>\n                            </div>\n                            <!-- <ng-template #inactiveKeywordCard>\n                                <div style=\"opacity: 0.5\"><app-keyword-card [keywordObj]=\"item\"></app-keyword-card></div>\n                            </ng-template> -->\n                        </div>\n                    </div>\n                </div>\n\n                <div class='keyword-section'>\n                    <h6>Operating Systems</h6>\n                    <hr/>\n                    <div class='row'>\n                        <div *ngFor='let item of allKeywordsArray'>\n                            <div *ngIf=\"item.type == 'operating-system'\">\n                                <section class='col s6 m6 l4 xl3'>\n                                    <!-- <div *ngIf=\"item.isActive == true; else inactiveKeywordCard\"> -->\n                                        <app-keyword-card [keywordObj]=\"item\"></app-keyword-card>\n                                    <!-- </div> -->\n                                </section>\n                            </div>\n                            <!-- <ng-template #inactiveKeywordCard>\n                                <div style=\"opacity: 0.5\"><app-keyword-card [keywordObj]=\"item\"></app-keyword-card></div>\n                            </ng-template> -->\n                        </div>\n                    </div>\n                </div>\n\n                <div class='keyword-section'>\n                    <h6>Other</h6>\n                    <hr/>\n                    <div class='row'>\n                        <div *ngFor='let item of allKeywordsArray'>\n                            <div *ngIf=\"item.type == 'other'\">\n                                <section class='col s6 m6 l4 xl3'>\n                                    <!-- <div *ngIf=\"item.isActive == true; else inactiveKeywordCard\"> -->\n                                        <app-keyword-card [keywordObj]=\"item\"></app-keyword-card>\n                                    <!-- </div> -->\n                                </section>\n                            </div>\n                            <!-- <ng-template #inactiveKeywordCard>\n                                <div style=\"opacity: 0.5\"><app-keyword-card [keywordObj]=\"item\"></app-keyword-card></div>\n                            </ng-template> -->\n                        </div>\n                    </div>\n                </div>\n                \n            </section>\n        </div>\n        \n        <ng-template #loadingScreen>\n            <section class='center-content h-90'>\n                <div class='container'>\n                    <div style='text-align: center'><h6>Loading keyword data...</h6></div>\n                    <div class=\"progress\">\n                        <div class=\"indeterminate\"></div>\n                    </div>\n                </div>\n            </section>\n        </ng-template>\n\n    `,\n    styles: []\n})\n\nexport class AllKeywordsComponent implements OnInit {\n\n    allKeywordsArray: any;\n    keywordCount: any;\n    serverResponded: any;\n\n\tconstructor() {\n        this.serverResponded = false;\n\t\tthis.ngOnInit();\n\t}\n\n  \tngOnInit = () => {\n        var rootUrl = 'https://central-api-go.appspot.com';\n        fetch(rootUrl + `/KeywordFactory/api/allkeywords`)\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                this.allKeywordsArray = data;\n                this.keywordCount = data.length;\n                this.serverResponded = true;\n            });\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AllKeywordsComponent } from './all-keywords/all-keywords.component'\nimport { KeywordDetailsComponent } from './keyword-details/keyword-details.component'\n\nconst routes: Routes = [\n    { path: '', redirectTo: 'allkeywords', pathMatch: 'full'},\n    { path: 'allkeywords', component: AllKeywordsComponent},\n    { path: 'allkeywords/keyworddetails/:id', component: KeywordDetailsComponent},\n    { path: 'addnew', component: KeywordDetailsComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\nexport const routingComponents = [\n    AllKeywordsComponent,\n    KeywordDetailsComponent\n]","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'keywordfactory';\n}\n","<nav>\n    <div class=\"nav-wrapper deep-orange lighten-1\">\n      <a href=\"#\" class=\"brand-logo\" style=\"padding-left: 15px;\">Keyword Factory</a>\n      <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\n        <li><a routerLink='allkeywords' routerLinkActive='teal lighten-2'>All Keywords</a></li>\n        <li><a routerLink='addnew' routerLinkActive='teal lighten-2'>Add New</a></li>\n        <li><a href='https://cafeamericano.github.io/appGalleryLite/' target=\"_blank\">App Gallery</a></li>\n        <li><a href='https://cafeamericano.github.io/appFactory/#/' target=\"_blank\">App Factory</a></li>\n      </ul>\n    </div>\n</nav>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AllKeywordsComponent } from './all-keywords/all-keywords.component';\nimport { KeywordDetailsComponent } from './keyword-details/keyword-details.component';\nimport { KeywordCardComponent } from './keyword-card/keyword-card.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents,\n    AllKeywordsComponent,\n    KeywordDetailsComponent,\n    KeywordCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-keyword-card',\n    template: `\n        <a routerLink='keyworddetails/{{keywordObj._id}}' routerLinkActive=''>\n            <div class='card' style=\"padding: 7px\">\n                <strong>{{keywordObj.name}}</strong>\n            </div>\n        </a>\n    `,\n    styles: [],\n})\n\nexport class KeywordCardComponent implements OnInit {\n\n    @Input() // Must be here to pass data as keywordObj into this component\n    keywordObj: any;\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-keyword-details',\n  template: `\n    <section class='center-content h-90 animated fadeInDown'>\n        <div class='card container p-2' style='width: 350px'>\n\n            <div class=\"row\">\n                <span *ngIf=\"keywordInformation; else elseBlock1\">\n                    <input\n                    value=\"{{keywordInformation.name}}\" \n                    id=\"keywordName\" \n                    type=\"text\" \n                    class=\"validate\"\n                >\n                </span>\n                <ng-template #elseBlock1>\n                    <input\n                        value=\"\" \n                        placeholder=\"Keyword Name\"\n                        id=\"keywordName\" \n                        type=\"text\" \n                        class=\"validate\"\n                    >\n                </ng-template>\n            </div>\n\n            <div class=\"row\">\n                <label>Keyword Type</label>\n                <select id='keywordSelectedType' class=\"browser-default\">\n                    <option value=\"\" disabled selected>Select type</option>\n                    <option \n                        *ngFor='let item of this.possibleKeywordTypes'\n                        id={{item.value}}\n                        value={{item.value}}\n                    >\n                        {{item.label}}\n                    </option>\n                </select>\n            </div>\n\n            <div class=\"row\">\n                <label>Show in App Gallery</label>\n                <select id='keywordShowInGallery' class=\"browser-default\">\n                    <option value=\"\" disabled selected>Select status</option>\n                    <option \n                        *ngFor='let item of this.possibleDisplayStatuses'\n                        id={{item.value}}\n                        class={{item.value}}\n                        value={{item.value}}\n                    >\n                        {{item.label}}\n                    </option>\n                </select>\n            </div>\n\n            <div class=\"row\">\n                <label>Show on Portfolio</label>\n                <select id='keywordShowOnPortfolio' class=\"browser-default\">\n                    <option value=\"\" disabled selected>Select status</option>\n                    <option \n                        *ngFor='let item of this.possibleDisplayStatuses'\n                        id={{item.value}}\n                        class={{item.value}}\n                        value={{item.value}}\n                    >\n                        {{item.label}}\n                    </option>\n                </select>\n            </div>\n\n            <div class=\"row\" style=\"text-align: center\">\n                <a *ngIf=\"keywordInformation\" (click)=\"processDelete()\" class=\"m-1 waves-effect waves-light btn red lighten-2\">Delete</a>\n                <a (click)=\"processCancel()\" class=\"m-1 waves-effect waves-light btn blue-grey lighten-3\">Cancel</a>\n                <span *ngIf=\"keywordId; else elseBlock2\">\n                    <a (click)=\"processUpdate()\" class=\"m-1 waves-effect waves-light btn\">Update</a>\n                </span>\n                <ng-template #elseBlock2>\n                    <a (click)=\"processCreate()\" class=\"m-1 waves-effect waves-light btn\">Add</a>\n                </ng-template>\n            </div>\n\n        </div>\n    </section>\n  `,\n  styles: []\n})\nexport class KeywordDetailsComponent implements OnInit {\n\n    keywordId: string;\n    keywordInformation: any;\n    possibleKeywordTypes: any;\n    possibleDisplayStatuses: any;\n\n    constructor(route: ActivatedRoute, private location: Location) { \n        route.params.subscribe(params => {\n            console.log(params);\n            this.keywordId = params.id;\n        });\n        route.queryParams.subscribe(qParams => {\n            console.log(qParams);\n        })\n        this.ngOnInit();\n    }\n    \n    ngOnInit = () => {\n        this.definePossibleKeywordTypes();\n        this.definePossibleDisplayStatuses();\n        if (this.keywordId) {\n            this.processRead();\n        }\n    }\n\n    definePossibleDisplayStatuses = () => {\n        this.possibleDisplayStatuses = [\n            {label: \"Show\",                     value: \"true\"},\n            {label: \"Hide\",                     value: \"false\"}\n        ]\n    }\n\n    definePossibleKeywordTypes = () => {\n        this.possibleKeywordTypes = [\n            {label: \"Language\",                 value: 'language'},\n            {label: \"Library\",                  value: 'library'},\n            {label: \"Front End Framework\",      value: 'front-end-framework'},\n            {label: \"Back End Framework\",       value: 'back-end-framework'},\n            {label: \"Database\",                 value: 'database'},\n            {label: \"ORM\",                      value: 'orm'},\n            {label: \"Deployment Technology\",    value: 'deployment'},\n            {label: \"Operating System\",         value: 'operating-system'},\n            {label: \"Other\",                    value: 'other'}\n        ]\n    }\n\n    applyPreselectedKeywordType = () => {\n        if (this.keywordInformation && this.keywordInformation.type) {\n            document.getElementById(this.keywordInformation.type).setAttribute('selected','')\n        }\n    }\n\n    applyPreselectedDisplayStatus = () => {\n        if (this.keywordInformation) {\n            console.log(this.keywordInformation)\n            console.log(document.getElementById('keywordShowInGallery'))\n            document.getElementById('keywordShowInGallery').querySelector(`.${this.keywordInformation.showInGallery}`).setAttribute('selected','');\n            document.getElementById('keywordShowOnPortfolio').querySelector(`.${this.keywordInformation.showOnPortfolio}`).setAttribute('selected','');\n        }\n    }\n\n    processRead() {\n        var rootUrl = 'https://central-api-go.appspot.com';\n        fetch(rootUrl + `/KeywordFactory/api/keyword?id=` + this.keywordId)\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                this.keywordInformation = data[0];\n                this.applyPreselectedKeywordType();\n                this.applyPreselectedDisplayStatus();\n            });\n    }\n\n    processCreate() {\n        var rootUrl = 'https://central-api-go.appspot.com';\n        var url = rootUrl + '/KeywordFactory/api/keyword'\n        fetch(url, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                name: (<HTMLInputElement>document.getElementById('keywordName')).value,\n                type: (<HTMLInputElement>document.getElementById('keywordSelectedType')).value,\n                showInGallery: (<HTMLInputElement>document.getElementById('keywordShowInGallery')).value == \"true\",\n                showOnPortfolio: (<HTMLInputElement>document.getElementById('keywordShowOnPortfolio')).value == \"true\"\n\n            })\n        }).then(response => {\n            this.location.back();\n        });\n    }\n\n    processUpdate() {\n        var rootUrl = 'https://central-api-go.appspot.com';\n        var url = rootUrl + '/KeywordFactory/api/keyword'\n        fetch(url, {\n            method: \"PUT\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                _id: this.keywordId,\n                name: (<HTMLInputElement>document.getElementById('keywordName')).value,\n                type: (<HTMLInputElement>document.getElementById('keywordSelectedType')).value,\n                showInGallery: (<HTMLInputElement>document.getElementById('keywordShowInGallery')).value == \"true\",\n                showOnPortfolio: (<HTMLInputElement>document.getElementById('keywordShowOnPortfolio')).value == \"true\"\n\n            })\n        }).then(response => {\n            this.location.back();\n        });\n    }\n\n    processDelete() {\n        var rootUrl = 'https://central-api-go.appspot.com';\n        var url = rootUrl + '/KeywordFactory/api/keyword'\n        fetch(url, {\n            method: \"DELETE\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                _id: this.keywordId\n            })\n        }).then(response => {\n            this.location.back();\n        });\n    }\n\n    processCancel() {\n        this.location.back();\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}